
============================================================
I have chosen to base this application on the Factory pattern as it is one of most used design pattern in Java. 
This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.

In Factory pattern, objects are created without exposing the creation logic to the client and refer to newly created object using a common interface.

This will allow easy implementation of newer classes / objects such as Graphical User Interface or other additional functionality

Implementation

I have followed the design criteria and outlined the features below:

===================================================================

Create an application that can read in commands of the following form:

    PLACE X,Y,F
    MOVE
    LEFT
    RIGHT
    REPORT

- PLACE will put the toy robot on the table in position X,Y and facing NORTH,
  SOUTH, EAST or WEST.
- The origin (0,0) can be considered to be the SOUTH WEST most corner.
- The first valid command to the robot is a PLACE command, after that, any
  sequence of commands may be issued, in any order, including another PLACE
  command. The application should discard all commands in the sequence until
  a valid PLACE command has been executed.
- MOVE will move the toy robot one unit forward in the direction it is
  currently facing.
- LEFT and RIGHT will rotate the robot 90 degrees in the specified direction
  without changing the position of the robot.
- REPORT will announce the X,Y and F of the robot. This can be in any form,
  but standard output is sufficient.

- A robot that is not on the table can choose the ignore the MOVE, LEFT, RIGHT
  and REPORT commands.
- Input can be from a file, or from standard input, as the developer chooses.
- Provide test data to exercise the application.

===========================================================================================================

Step 1
Create an interface - this is an inteface for both the play and board layout functionalities 
Robot.java

Step 2
Create concrete class implementing the same interface - this will be where the functions and features will be called.
Player.java

Step 3
Create a high-level class to instantiate & terminate the application.
FactoryPatternDemo.java

Step 4
Verify the output.

============================================================================================================
